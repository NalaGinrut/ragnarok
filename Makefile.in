CFLAGS := @GUILE_CFLAGS@ -fPIC -MD 
LIBS := @GUILE_LIBS@ -shared
LDFLAGS := @GUILE_LDFLAGS@ -fPIC -shared
CC := @CC@
OBJ := obj
CEE := cee
TOP := $(shell pwd)
MOD := ragnarok
MOD_OBJ := $(OBJ)/ragnarok
BIN_OBJ := $(OBJ)/bin
MOD_COMPILED_PATH := $(shell guile -c "(display %compile-fallback-path)")
MOD_PATH := $(shell guile -c "(display (car %load-path))")
MOD_TARGET_PATH := $(MOD_COMPILED_PATH)/$(MOD_PATH)/ragnarok
GUILEC := guild compile
GUILE := @GUILE@
VERSION := @PACKAGE_VERSION@
PREFIX := @prefix@
INSTALL := install -c
V := @

mod-sfile := $(shell find $(MOD) -name *.scm)
mod-ofile := $(mod-sfile:.scm=.scm.go)
mod-ofile := $(subst $(MOD)/,$(MOD_OBJ)/,$(mod-ofile))

ALL_TARGETS :=  $(OBJ)/libragnarok.so \
		version \
		modules \
		$(OBJ)/bin/ragnarok

all: $(ALL_TARGETS)

include $(CEE)/Makefile.mk

$(MOD_OBJ)/%.scm.go: $(MOD)/%.scm
	@echo + guilec $<
	@mkdir -p $(@D)
	@GUILE_AUTO_COMPILE=0
	$(V)$(GUILEC) -L $(TOP) -o $@ $<

$(BIN_OBJ)/ragnarok: bin/ragnarok.c
	@echo building Ragnarok ...
	@mkdir -p $(@D)
	$(V)$(CC) @GUILE_CFLAGS@ @GUILE_LIBS@ -o $@ $<

$(MOD)/version.scm:
	$(V)$(GUILE) -c '(call-with-output-file "$@" (lambda (port) (format port "(define-module (ragnarok version) #:export (ragnarok-version)) (define ragnarok-version \"Ragnarok ~a\")" "$(VERSION)")))'

.PHONY: clean modules install distclean distclean-mk bin version test

clean:
	-rm -frd $(OBJ)
	-rm -frd *.log
	-rm -rf autom4te.cache
	-rm -rf $(MOD)/version.scm
	-rm -rf config.h

install: $(ALL_TARGETS)
	cp -frdp $(OBJ)/*.so /usr/local/lib/
	cp -frdp $(MOD) $(MOD_PATH)
	$(INSTALL) -m 755 -d $(MOD_TARGET_PATH)
	cp -frdp $(MOD_OBJ)/* $(MOD_TARGET_PATH)
	$(INSTALL) -m 755 $(OBJ)/bin/* $(PREFIX)/bin

distclean: distclean-mk clean

distclean-mk:
	-rm -f Makefile

modules: $(mod-ofile)

version: $(MOD)/version.scm

bin: $(OBJ)/bin/ragnarok

test:
	@echo $(PREFIX)
	@echo $(MOD_COMPILED_PATH)
	@echo $(CC)
	@echo $(CFLAGS)
	@echo $(GUILE)
	@echo $(VERSION)
